<svg xmlns="http://www.w3.org/2000/svg" xmlns:svg="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" id="svg1279" width="364.048" height="308.369" version="1.1" viewBox="0 0 96.321 81.589" xml:space="preserve"><defs id="defs1276"><linearGradient id="linearGradient1203"><stop style="stop-color:#4a9467;stop-opacity:1" id="stop1199" offset="0"/><stop style="stop-color:#0f3a21;stop-opacity:1" id="stop1201" offset="1"/></linearGradient><linearGradient id="linearGradient3004"><stop style="stop-color:#000;stop-opacity:1" id="stop3002" offset="0"/></linearGradient><filter style="color-interpolation-filters:sRGB" id="filter3106" width="1" height="1" x="0" y="0"><feTurbulence id="feTurbulence3088" baseFrequency="0.03 0.1" numOctaves="5" result="result91" type="fractalNoise"/><feDisplacementMap id="feDisplacementMap3090" in2="result91" scale="5"/><feColorMatrix id="feColorMatrix3092" result="result5" values="1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 3 -1"/><feComposite id="feComposite3094" in="SourceGraphic" in2="result5" operator="in" result="result6"/><feTurbulence id="feTurbulence3096" baseFrequency="0.03 0.1" numOctaves="5" result="result92" type="fractalNoise"/><feDisplacementMap id="feDisplacementMap3098" in="result6" in2="result92" result="result4" scale="4" xChannelSelector="R" yChannelSelector="A"/><feComposite id="feComposite3100" in="result4" in2="result4" operator="in" result="result2"/><feComposite id="feComposite3102" in="result2" in2="result2" operator="over" result="result93"/><feBlend id="feBlend3104" in2="result93" mode="multiply"/></filter><filter style="color-interpolation-filters:sRGB" id="filter3126" width="1" height="1" x="0" y="0"><feTurbulence id="feTurbulence3108" baseFrequency="0.03 0.1" numOctaves="5" result="result91" type="fractalNoise"/><feDisplacementMap id="feDisplacementMap3110" in2="result91" scale="5"/><feColorMatrix id="feColorMatrix3112" result="result5" values="1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 3 -1"/><feComposite id="feComposite3114" in="SourceGraphic" in2="result5" operator="in" result="result6"/><feTurbulence id="feTurbulence3116" baseFrequency="0.03 0.1" numOctaves="5" result="result92" type="fractalNoise"/><feDisplacementMap id="feDisplacementMap3118" in="result6" in2="result92" result="result4" scale="4" xChannelSelector="R" yChannelSelector="A"/><feComposite id="feComposite3120" in="result4" in2="result4" operator="in" result="result2"/><feComposite id="feComposite3122" in="result2" in2="result2" operator="over" result="result93"/><feBlend id="feBlend3124" in2="result93" mode="multiply"/></filter><linearGradient id="linearGradient1205" x1="34.768" x2="110.314" y1="22.469" y2="98.141" gradientTransform="translate(-0.44963609,0.04508)" gradientUnits="userSpaceOnUse" xlink:href="#linearGradient1203"/></defs><g id="layer1" transform="translate(-19.655985,-18.144864)"><path style="opacity:1;fill:url(#linearGradient1205);fill-opacity:1;stroke:#fff;stroke-width:.79375;stroke-dasharray:6.35,3.175,1.5875,2.38125,3.96875,3.175,7.14375,19.8438,4.7625,.79375,520.7,42.8625,6779.42;stroke-dashoffset:0" id="path1125" d="m 48.788584,98.372419 c -4.59252,-0.71114 -7.64118,-3.842704 -8.04956,-8.268485 -0.31067,-3.366658 0.59388,-6.129338 2.67977,-8.184652 1.94076,-1.912295 5.13627,-2.929446 8.01579,-2.551472 3.4303,0.450268 5.99577,2.191483 7.38968,5.015442 0.67711,1.371799 0.93253,2.602588 0.93253,4.493543 0,1.820119 -0.24569,3.071987 -0.85243,4.343284 -1.18507,2.483075 -3.15289,4.11166 -5.87797,4.86464 -1.19663,0.33065 -3.11806,0.46109 -4.23781,0.2877 z m 3.39329,-5.188458 c 0.90398,-0.404771 1.83169,-1.308747 2.28001,-2.221679 0.33679,-0.685803 0.38121,-0.930629 0.37823,-2.085487 -0.003,-1.038525 -0.0641,-1.441321 -0.29762,-1.952459 -0.41541,-0.909119 -1.31871,-1.833672 -2.22758,-2.280013 -0.69177,-0.339716 -0.92814,-0.381585 -2.15436,-0.381585 -1.63617,0 -2.2937,0.242001 -3.35513,1.234848 -0.99775,0.933282 -1.31787,1.752989 -1.31964,3.379209 -0.001,1.069575 0.0558,1.434195 0.3119,1.99713 0.52011,1.143109 1.59736,2.095169 2.8236,2.495428 0.84656,0.276329 2.75088,0.177176 3.56059,-0.185392 z m -30.04999,-1.654479 v -6.713163 l 2.58129,-2.583981 2.58131,-2.583984 3.34122,3.339136 3.34122,3.339136 v -3.40784 -3.407838 h 2.68579 2.6858 v 9.330848 9.330843 l -6.23298,-6.231852 c -3.42814,-3.427517 -6.27922,-6.231852 -6.33573,-6.231852 -0.0565,0 -0.10281,2.820085 -0.10281,6.266854 v 6.26685 h -2.2726 -2.27259 z m 43.66137,-0.173491 v -6.886654 h -2.3519 -2.35188 l 2.38517,-2.479194 2.38515,-2.479195 h 5.70535 5.70534 l -3.25311,2.307029 -3.2531,2.307028 -0.006,7.05882 -0.007,7.058814 h -2.47916 -2.47919 z m 12.67144,0.111547 v -6.775106 l 2.57775,-2.590742 2.57772,-2.590741 h 5.69734 5.69735 l -2.38699,2.476781 -2.38699,2.476781 -2.92682,0.0025 -2.92683,0.0025 v 1.101864 1.101864 h 2.96125 2.96128 v 2.272595 2.272596 h -2.96128 -2.96125 v 1.170731 1.170732 h 2.96125 2.96128 v 2.341463 2.341463 h -5.92253 -5.92253 z m 17.76757,4.433646 v -2.341463 h 3.56978 c 1.963396,0 3.670126,-0.0385 3.792756,-0.08555 0.26465,-0.101558 0.62597,-0.754926 0.62597,-1.131942 0,-0.146881 -0.11225,-0.405621 -0.24936,-0.57499 -0.20651,-0.255028 -0.49644,-0.339883 -1.68723,-0.49381 -1.12607,-0.145564 -1.65168,-0.291442 -2.423756,-0.672709 -2.31539,-1.14336 -3.64432,-3.654958 -3.22079,-6.087091 0.43965,-2.524598 2.386886,-4.454945 4.910886,-4.868289 0.44596,-0.07303 3.41401,-0.130174 6.59564,-0.127002 l 5.78478,0.0058 -2.39382,2.334874 -2.39382,2.334866 h -3.55257 -3.55255 l -0.42378,0.356575 c -0.31004,0.260888 -0.42377,0.474431 -0.42377,0.795753 0,0.88469 0.69027,1.324416 2.08163,1.326098 3.09221,0.0038 5.44086,1.934184 5.94682,4.887919 0.50086,2.923986 -1.69541,5.970546 -4.71729,6.543636 -0.4025,0.0763 -2.4278,0.13878 -4.50068,0.13878 H 96.232264 Z M 66.344194,76.910276 c -5.74617,-2.326799 -21.11714,-11.431239 -22.70297,-13.447279 -0.65398,-0.831397 -0.95992,-4.1754 -1.07095,-11.705261 -0.0734,-4.969774 0.0817,-12.646305 0.25881,-12.823461 0.0285,-0.02845 1.27149,0.458712 2.76231,1.082604 2.52171,1.055318 2.72634,1.167588 2.93694,1.611413 0.12445,0.262387 0.25634,0.742969 0.29298,1.067964 0.0366,0.324992 0.13014,0.590897 0.20777,0.590897 0.21255,0 -0.3297,0.551596 -0.76203,0.77517 -0.3975,0.205552 -0.49964,0.09847 -0.20692,-0.216897 0.1399,-0.150736 0.13339,-0.16487 -0.0345,-0.07547 -0.37728,0.200922 -0.68866,0.521614 -0.68866,0.709269 0,0.3314 0.64384,0.196792 1.35825,-0.283974 0.6027,-0.405591 0.66883,-0.42584 0.48764,-0.149306 -0.11534,0.175962 -0.29888,0.354179 -0.40796,0.39604 -0.22498,0.08633 -0.27006,0.712838 -0.0607,0.842285 0.0758,0.04681 0.13779,0.145515 0.13779,0.219319 0,0.188992 -0.82352,0.990509 -1.31751,1.282318 -0.56509,0.333803 -1.3119,2.010556 -0.8955,2.010556 0.0706,0 0.16385,-0.111531 0.20712,-0.247858 0.0433,-0.136322 0.51229,-0.63609 1.04227,-1.110599 0.52999,-0.474509 0.96362,-0.929904 0.96362,-1.011989 0,-0.08209 0.21693,-0.413979 0.48206,-0.737541 0.55121,-0.672677 0.6529,-1.070122 0.17218,-0.672897 -0.17046,0.14083 -0.0309,-0.03346 0.30989,-0.387343 0.39809,-0.413264 0.74297,-0.647189 0.96412,-0.653967 0.18939,-0.0058 0.59226,-0.106196 0.89528,-0.223094 0.303,-0.116899 0.64612,-0.211997 0.76245,-0.211336 0.26411,0.0015 2.88234,1.104886 3.16294,1.33293 0.11371,0.09235 0.37831,0.208719 0.58819,0.258601 0.20987,0.04987 1.82994,0.708998 3.60016,1.464697 1.77023,0.755699 3.30884,1.373998 3.41916,1.373998 0.11029,0 0.31276,0.123959 0.44988,0.275467 0.13713,0.151501 0.36435,0.275465 0.50498,0.275465 0.29337,0 1.45612,0.465127 7.72331,3.089519 2.50643,1.049571 4.64773,1.868706 4.82065,1.844115 0.19738,-0.02806 0.30416,-0.13237 0.29202,-0.285209 -0.0224,-0.282074 0.013,-0.29063 0.38433,-0.09207 0.15308,0.0819 0.30936,0.117728 0.34744,0.07965 0.0381,-0.03808 -0.10671,-0.164585 -0.32169,-0.28111 -0.58401,-0.316499 -0.2591,-0.266628 0.37694,0.05785 0.30267,0.154413 0.52092,0.328298 0.485,0.386416 -0.0838,0.135575 0.44457,0.39033 2.3616,1.138683 0.85168,0.332466 1.54894,0.650968 1.5495,0.707782 9.5e-4,0.105317 -0.0804,0.119129 -1.01179,0.171901 -0.29189,0.01653 -0.57965,0.109221 -0.63945,0.205974 -0.0683,0.110701 -0.23913,0.143171 -0.46054,0.0876 -0.22462,-0.05638 -0.3918,-0.02303 -0.46242,0.09228 -0.10119,0.165136 -1.9907,0.792877 -2.55253,0.847994 -0.13096,0.01286 -0.28081,0.06595 -0.33287,0.117989 -0.0521,0.05205 -0.29814,0.09463 -0.54689,0.09463 -0.24875,0 -0.50183,0.08672 -0.5624,0.192727 -0.0605,0.105999 -0.63698,0.39384 -1.28089,0.639646 -0.64389,0.245807 -2.28966,0.95986 -3.65725,1.586788 -4.94496,2.266847 -8.17045,3.405523 -8.81492,3.111877 -0.20712,-0.09437 -0.35732,-0.10024 -0.40938,-0.01594 -0.0452,0.07317 -0.22663,0.09681 -0.4031,0.05251 -0.17647,-0.0443 -0.36413,-0.01057 -0.41702,0.07504 -0.0703,0.113613 -0.15259,0.108749 -0.30539,-0.01808 -0.17065,-0.141627 -0.23837,-0.133818 -0.36718,0.04232 -0.11615,0.158772 -0.21665,0.17895 -0.37958,0.07618 -0.12184,-0.07689 -0.32571,-0.09987 -0.4529,-0.05107 -0.18827,0.07224 -0.20262,0.142261 -0.0771,0.376678 0.1412,0.263863 0.13014,0.275142 -0.13177,0.134924 -0.15731,-0.08416 -0.3852,-0.304564 -0.50658,-0.489802 -0.17512,-0.267269 -0.27277,-0.30892 -0.47301,-0.201754 -0.46811,0.250525 -0.7906,0.148493 -1.09683,-0.34702 -0.21007,-0.339885 -0.39803,-0.482067 -0.63731,-0.482067 -0.33589,0 -1.01549,-0.546117 -1.01549,-0.816047 0,-0.180923 -1.72966,-1.938614 -1.9077,-1.938614 -0.0745,0 -0.15926,0.07155 -0.18834,0.158984 -0.0291,0.08744 -0.0555,-0.237956 -0.0587,-0.723098 -0.01,-1.577064 -0.22268,-3.862496 -0.34752,-3.737662 -0.0662,0.06626 -0.15909,0.534427 -0.20637,1.040388 -0.0472,0.505964 -0.13892,0.919933 -0.2037,0.919933 -0.15129,0 -0.14869,-0.09139 0.0351,-1.282082 0.0841,-0.544782 0.33256,-1.387669 0.55216,-1.873082 0.21958,-0.485414 0.37219,-0.909633 0.3391,-0.942711 -0.1701,-0.1701 -1.33145,2.09973 -1.52246,2.975602 -0.0553,0.253911 -0.21833,0.579305 -0.36212,0.723098 -0.14381,0.14379 -0.25947,0.431886 -0.25706,0.640206 0.005,0.3628 0.013,0.367496 0.2066,0.111419 0.1984,-0.262317 0.20222,-0.261884 0.20222,0.02295 0,0.159667 0.0774,0.321574 0.17216,0.359784 0.13779,0.05557 0.13779,0.07164 0,0.08034 -0.29051,0.01835 -0.19666,0.839594 0.30154,2.638759 0.7972,2.878907 0.94188,3.223601 1.35977,3.239608 0.65537,0.0251 0.80331,0.275911 0.70021,1.187155 -0.0683,0.604166 -0.0281,1.027071 0.15503,1.632191 0.26264,0.867462 0.47913,1.064947 0.47913,0.437067 0,-0.208819 0.0686,-0.596194 0.15275,-0.86083 0.0839,-0.264636 0.16138,-0.636107 0.17216,-0.825489 0.0146,-0.244726 0.10916,-0.357066 0.32939,-0.388345 0.17044,-0.0242 0.3099,-0.07697 0.3099,-0.117225 0,-0.04027 -0.38738,-0.492222 -0.86084,-1.004339 -0.76705,-0.829691 -1.88209,-2.679724 -1.7155,-2.846311 0.035,-0.03502 0.23736,0.233526 0.44963,0.596778 0.21226,0.363247 0.86349,1.159828 1.44714,1.770177 1.10731,1.157956 2.0824,2.710965 1.50968,2.404452 -0.15666,-0.08385 -0.34558,-0.114947 -0.41976,-0.0691 -0.0742,0.04586 -0.13486,-0.04058 -0.13486,-0.192101 0,-0.151502 -0.0537,-0.308652 -0.1194,-0.349212 -0.18716,-0.115679 -0.58536,0.406402 -0.49319,0.646606 0.0456,0.118674 0.0114,0.348522 -0.0752,0.510789 -0.20834,0.389295 0.0621,0.736996 0.50708,0.651933 0.27473,-0.05251 0.31828,-0.0049 0.31828,0.347994 0,0.306823 -0.0516,0.389052 -0.2066,0.329554 -0.3445,-0.13219 -0.23959,0.312857 0.20653,0.876123 0.43489,0.549092 2.28389,1.894156 2.41862,1.759429 0.0875,-0.08746 -0.75944,-1.663597 -0.93313,-1.736676 -0.0604,-0.02541 -0.0779,-0.0977 -0.0391,-0.16066 0.0389,-0.06296 0.005,-0.423857 -0.0766,-0.802014 -0.15796,-0.736553 0.0353,-1.898979 0.28958,-1.74182 0.21683,0.134014 0.15487,0.753558 -0.0753,0.753558 -0.26176,0 -0.2612,0.136225 0.002,0.512165 0.13583,0.193983 0.4213,0.329872 0.81779,0.389329 0.85178,0.127734 1.04274,0.02377 0.5217,-0.284018 -0.66318,-0.391752 -0.64151,-0.556019 0.0659,-0.499299 0.84657,0.06789 1.00564,-0.145775 0.38234,-0.513532 -0.37624,-0.221988 -0.48941,-0.371787 -0.4564,-0.604144 0.0296,-0.208518 0.12363,-0.295478 0.28932,-0.267485 0.20234,0.03419 0.23061,-0.02624 0.16105,-0.344331 -0.0647,-0.296023 -0.0503,-0.33773 0.0623,-0.179213 0.0807,0.113629 0.14771,0.346054 0.14885,0.516498 10e-4,0.170445 0.0641,0.3099 0.1399,0.3099 0.0758,0 0.13779,-0.1203 0.13779,-0.267336 0,-0.371509 0.28345,-0.509662 0.48372,-0.235773 0.0916,0.125196 0.30324,0.227643 0.47044,0.227643 0.23688,0 0.28552,-0.05828 0.22025,-0.263875 -0.046,-0.14514 -0.0192,-0.303738 0.0595,-0.352462 0.0789,-0.04872 0.14332,0.008 0.14332,0.12614 0,0.122902 0.11778,0.214728 0.27546,0.214728 0.16235,0 0.27548,-0.09184 0.27548,-0.223462 0,-0.18191 0.0379,-0.191934 0.2043,-0.05389 0.16927,0.140471 0.22751,0.108587 0.33948,-0.185888 0.0846,-0.222419 0.27873,-0.38784 0.51877,-0.441983 1.14424,-0.258071 1.56661,-0.389676 2.38076,-0.74181 2.11869,-0.916355 2.94175,-1.26625 4.95839,-2.107847 2.56042,-1.068527 4.8086,-1.93098 5.62395,-2.157461 0.38444,-0.106781 0.57269,-0.22825 0.52924,-0.341482 -0.0371,-0.09666 -0.0267,-0.239238 0.0231,-0.316848 0.13941,-0.217339 0.67641,-0.344585 0.77576,-0.183843 0.0501,0.08105 -0.0311,0.143334 -0.18688,0.143334 -0.15146,0 -0.31378,0.06198 -0.36059,0.137738 -0.12575,0.203368 0.53411,0.168281 1.13351,-0.06027 0.73906,-0.281809 2.74016,-0.752615 3.53647,-0.83204 0.37165,-0.03707 0.87316,-0.104439 1.11449,-0.149711 0.31218,-0.05857 0.57421,2.74e-4 0.90821,0.203873 0.58359,0.355777 1.31505,0.363311 2.3977,0.02469 0.53729,-0.168039 0.85716,-0.209343 0.91431,-0.118055 0.0483,0.07723 0.15682,0.09782 0.24102,0.04577 0.0843,-0.05205 0.15308,-0.02483 0.15308,0.0605 0,0.0931 0.11159,0.119748 0.27892,0.06662 0.17994,-0.05712 0.26548,-0.03072 0.24103,0.07437 -0.0555,0.238261 2.96426,1.510189 3.34745,1.409985 0.22081,-0.05776 0.27824,-0.03286 0.20344,0.08819 -0.0639,0.103544 -0.0324,0.158789 0.0818,0.143107 0.35128,-0.04821 0.54648,0.0073 0.46862,0.133232 -0.043,0.06936 0.29436,0.270484 0.7494,0.446931 0.81061,0.314315 0.82736,0.33145 0.82736,0.846063 0,0.818316 -0.28538,2.466477 -0.49891,2.881398 -1.11411,2.164816 -22.07242,14.30738 -24.66661,14.291031 -0.21119,-0.0013 -0.97278,-0.240845 -1.69243,-0.532255 z M 52.428734,63.745842 c 0.19953,-0.240416 -0.0329,-1.108062 -0.32709,-1.220946 -0.0992,-0.03808 -0.22189,-0.328487 -0.27257,-0.645338 -0.0506,-0.316851 -0.24219,-1.005632 -0.42561,-1.530621 -0.18342,-0.524989 -0.27469,-0.918189 -0.20284,-0.873775 0.14511,0.08966 0.17774,-0.478963 0.047,-0.819508 -0.10753,-0.280197 -0.72622,-0.283591 -0.8333,-0.0046 -0.0451,0.117306 0.11193,0.633588 0.34867,1.147284 0.24205,0.525142 0.43049,1.162385 0.43049,1.455752 0,0.387562 0.1103,0.647386 0.42883,1.010169 0.38125,0.434214 0.41974,0.554664 0.34698,1.085613 -0.0869,0.634017 0.11631,0.809228 0.45938,0.395941 z m -0.61539,-9.715511 c 0.11746,-0.227258 0.17049,-0.413198 0.11778,-0.413198 -0.1758,0 -0.59976,0.453214 -0.59976,0.641145 0,0.323415 0.26069,0.200147 0.48206,-0.227947 z m 6.63416,11.477754 c -0.0504,-0.05049 -0.09,-0.189955 -0.0877,-0.3099 0.003,-0.179093 0.0302,-0.173143 0.15031,0.03328 0.14836,0.255038 0.10526,0.444649 -0.0628,0.276612 z m -1.97825,-1.286333 -0.15633,-0.414025 0.38053,0.310725 c 0.24522,0.200235 0.32679,0.346709 0.22938,0.411916 -0.24119,0.161472 -0.2883,0.129426 -0.45364,-0.308616 z m 1.19776,0.1434 c 0,-0.07309 0.13941,-0.206067 0.3099,-0.295507 0.30824,-0.16175 0.30848,-0.161034 0.0475,0.13289 -0.29149,0.328292 -0.35742,0.35829 -0.35742,0.162612 z m 2.61352,-0.633612 c -0.16484,-0.433578 -0.16587,-0.473098 -0.013,-0.473098 0.0672,0 0.14933,0.185939 0.18275,0.413198 0.0744,0.50649 0.008,0.529751 -0.17052,0.0599 z m -1.07671,-0.197633 c 0,-0.189381 0.0312,-0.266856 0.0695,-0.172165 0.0382,0.09469 0.0382,0.24964 0,0.344332 -0.0382,0.0947 -0.0695,0.01721 -0.0695,-0.172167 z m 1.8606,0.183644 c -0.0504,-0.05049 -0.09,-0.189956 -0.0877,-0.309899 0.003,-0.179095 0.0303,-0.173146 0.15031,0.03328 0.14836,0.25504 0.10525,0.444652 -0.0628,0.276614 z m 0.53683,-0.418736 c -0.0747,-0.196297 -0.0589,-0.212118 0.0771,-0.07711 0.0942,0.09343 0.13649,0.204566 0.094,0.246972 -0.0425,0.04241 -0.1194,-0.03403 -0.17115,-0.169869 z m 1.78167,-0.394364 c 0.37878,-0.105399 0.75066,-0.186326 0.8264,-0.179844 0.2331,0.01994 -0.94637,0.375044 -1.2396,0.373201 -0.15145,-9.53e-4 0.0345,-0.08797 0.4132,-0.193357 z m 26.74089,-5.222025 c -1.65521,-0.705699 -3.06103,-1.335772 -3.12405,-1.400164 -0.19705,-0.201372 -0.53278,-1.895958 -0.40589,-2.048841 0.0656,-0.07896 0.38608,-0.291291 0.71234,-0.471857 0.57653,-0.319078 0.58582,-0.319892 0.33006,-0.02893 -0.14479,0.164657 -0.23192,0.330601 -0.19375,0.368767 0.0937,0.09369 0.80123,-0.571406 0.80123,-0.753168 0,-0.268701 -0.63164,-0.146262 -1.24706,0.241733 -0.33679,0.212324 -0.67949,0.426528 -0.76156,0.476008 -0.082,0.04948 -0.14918,0.003 -0.14918,-0.102926 0,-0.106098 0.0361,-0.18132 0.0804,-0.167178 0.0443,0.01415 0.21544,-0.06954 0.38054,-0.185979 0.33267,-0.234608 0.5852,-0.956901 0.33454,-0.956901 -0.0839,0 -0.15275,-0.121454 -0.15275,-0.269893 0,-0.299142 0.50264,-0.828521 1.24069,-1.30669 0.3391,-0.219707 0.57997,-0.546675 0.808,-1.096803 0.17866,-0.431077 0.27816,-0.827152 0.22109,-0.88016 -0.0571,-0.05302 -0.136,-0.0034 -0.17523,0.110214 -0.0394,0.11363 -0.52667,0.633276 -1.08301,1.154765 -0.55634,0.521492 -1.01182,1.017332 -1.01217,1.101866 -4.1e-4,0.08453 -0.17698,0.341806 -0.39251,0.571717 -0.62829,0.670234 -0.88537,1.338071 -0.356,0.924879 0.0727,-0.05682 -0.0698,0.09497 -0.31678,0.33731 -0.24703,0.242337 -0.44951,0.490256 -0.44998,0.550933 -4.1e-4,0.06068 -0.266,0.117306 -0.59007,0.125847 -0.32408,0.0085 -0.78507,0.116802 -1.02444,0.240578 -0.42888,0.221785 -0.45932,0.214868 -2.09571,-0.476232 -0.91329,-0.385707 -1.66053,-0.757383 -1.66053,-0.825943 0,-0.06857 -0.11713,-0.12466 -0.26013,-0.12466 -0.27508,0 -3.68568,-1.388656 -5.72782,-2.332133 -0.66698,-0.308144 -1.32039,-0.56026 -1.45202,-0.56026 -0.13161,0 -0.3141,-0.09007 -0.40548,-0.200181 -0.0914,-0.1101 -0.49972,-0.297156 -0.90743,-0.41568 -0.40771,-0.118527 -3.17611,-1.243057 -6.15203,-2.498965 -5.42319,-2.288729 -6.44371,-2.639193 -6.44371,-2.212877 0,0.119843 0.10851,0.281067 0.24102,0.358279 0.35492,0.206709 0.13877,0.178288 -0.42019,-0.05525 -0.30741,-0.128449 -0.5056,-0.152005 -0.53508,-0.06359 -0.0257,0.07724 -0.27757,-0.07095 -0.55964,-0.329322 -0.28206,-0.258358 -0.69941,-0.507059 -0.92744,-0.552664 -0.33556,-0.06712 -2.66798,-0.998308 -2.88331,-1.15114 -0.15633,-0.110962 0.17728,-0.20752 0.81634,-0.236231 0.39057,-0.01756 0.75736,-0.108293 0.81506,-0.201656 0.0647,-0.104829 0.23967,-0.135933 0.45729,-0.08131 0.2323,0.0583 0.3921,0.02299 0.46899,-0.10369 0.10737,-0.176744 2.00654,-0.816478 2.55859,-0.861824 0.13095,-0.01074 0.28081,-0.06214 0.33285,-0.114198 0.0521,-0.05205 0.30318,-0.09463 0.55806,-0.09463 0.27149,0 0.49426,-0.08034 0.53788,-0.193989 0.041,-0.1067 0.27142,-0.26895 0.51217,-0.36057 1.44208,-0.548788 2.77084,-1.115661 4.8452,-2.067049 4.5891,-2.104763 7.66554,-3.167604 8.38119,-2.895517 0.23465,0.08922 0.38405,0.08817 0.44043,-0.003 0.047,-0.07594 0.21182,-0.09793 0.36642,-0.04887 0.16988,0.05392 0.33288,0.0153 0.41209,-0.0977 0.10183,-0.145304 0.14657,-0.148589 0.20087,-0.0148 0.0987,0.243282 0.42317,0.213715 0.57194,-0.05212 0.0859,-0.153338 0.15585,-0.175126 0.22157,-0.06886 0.16729,0.270689 0.63073,0.182486 0.63073,-0.120056 0,-0.403201 0.25377,-0.336252 0.52291,0.13795 0.15649,0.275654 0.30347,0.384492 0.44123,0.32662 0.60867,-0.255705 0.79571,-0.210932 1.17026,0.280119 0.2278,0.298652 0.4954,0.494911 0.67483,0.494911 0.44481,0 0.90956,0.385314 0.90956,0.754108 0,0.224357 0.15243,0.419511 0.49133,0.628952 0.27024,0.167014 0.65035,0.54395 0.8447,0.837631 0.3699,0.558939 0.56451,0.644339 0.84015,0.36869 0.21431,-0.214304 0.22822,0.06581 0.0224,0.450436 -0.10233,0.191279 -0.0828,0.583814 0.0688,1.383489 0.11647,0.614045 0.21712,1.496975 0.22363,1.962063 0.01,0.7438 0.0278,0.795865 0.14397,0.432418 0.0727,-0.227261 0.18317,-0.81607 0.24551,-1.308466 l 0.11339,-0.895265 0.0181,0.831894 c 0.0195,0.898403 -0.24337,2.090968 -0.67721,3.07173 -0.14966,0.338398 -0.24607,0.641363 -0.21418,0.673253 0.11696,0.116899 1.09374,-1.806174 1.40403,-2.76404 0.17574,-0.542541 0.32451,-0.924457 0.33058,-0.848704 0.0177,0.220933 0.40422,-0.526385 0.4096,-0.791966 0.003,-0.132566 -0.0571,-0.241032 -0.13291,-0.241032 -0.0758,0 -0.13957,0.07748 -0.14185,0.172165 -0.002,0.0947 -0.0682,0.0624 -0.14625,-0.07176 -0.0781,-0.134159 -0.21089,-0.201356 -0.29509,-0.149321 -0.0841,0.05205 -0.0527,-0.04863 0.0699,-0.22372 0.30993,-0.442481 0.15909,-1.293154 -0.73747,-4.161141 l -0.54648,-1.747983 -0.51313,-0.04254 -0.51313,-0.04253 -0.008,-1.101866 c -0.008,-1.079839 -0.22744,-2.188923 -0.46255,-2.33424 -0.0652,-0.0403 -0.16268,0.220497 -0.21646,0.579551 -0.10835,0.722056 -0.28607,1.134891 -0.48875,1.134891 -0.19253,0 -0.16323,-0.602814 0.0392,-0.808124 0.13795,-0.139919 0.11745,-0.215015 -0.1033,-0.378476 -0.15145,-0.112149 -0.38393,-0.175765 -0.5165,-0.14135 -0.19007,0.04934 -0.24104,-0.02518 -0.24104,-0.352473 0,-0.312338 0.0511,-0.395422 0.2066,-0.33576 0.44213,0.169662 0.17903,-0.374631 -0.55111,-1.140106 -0.68848,-0.721804 -2.06161,-1.645617 -2.2162,-1.491022 -0.0346,0.03461 0.18588,0.472449 0.48995,0.972983 0.45128,0.742821 0.56825,1.081786 0.63651,1.844562 0.0838,0.936548 -0.0947,1.784887 -0.34309,1.631322 -0.14576,-0.0901 -0.0288,-0.656929 0.1617,-0.782919 0.0716,-0.04735 0.09,-0.212624 0.0408,-0.367255 -0.0996,-0.313895 -0.72651,-0.57964 -1.36736,-0.57964 h -0.42187 l 0.45824,0.382556 0.45825,0.382557 -0.6613,0.02877 c -0.83105,0.03616 -1.07647,0.243415 -0.52906,0.446787 0.22066,0.08197 0.47212,0.242113 0.5588,0.355852 0.2154,0.282656 0.0808,0.748478 -0.18666,0.645853 -0.17152,-0.06582 -0.19137,0.0031 -0.11192,0.388297 0.23647,1.1457 0.23837,1.166033 0.089,0.951562 -0.0787,-0.11298 -0.18382,-0.531341 -0.2336,-0.929698 -0.0976,-0.78066 -0.25241,-0.931245 -0.39079,-0.379952 -0.0953,0.379688 -0.4198,0.461824 -0.54417,0.137738 -0.12965,-0.337789 -0.63709,-0.257109 -0.64973,0.103301 -0.007,0.170445 -0.0421,0.232424 -0.0804,0.137738 -0.10265,-0.254502 -0.59744,-0.212021 -0.59744,0.05129 0,0.180032 -0.0391,0.191113 -0.20057,0.05701 -0.22914,-0.190169 -0.48811,-0.08147 -0.48811,0.204875 0,0.242031 -0.32586,0.414281 -1.02182,0.540126 -0.48231,0.0872 -5.11695,1.959496 -6.09697,2.463027 -0.21322,0.109546 -1.37934,0.583505 -2.59139,1.053235 -1.21204,0.469733 -2.38369,0.941582 -2.60364,1.048554 -0.21998,0.106977 -0.4948,0.1945 -0.61076,0.1945 -0.11599,0 -0.46281,0.117972 -0.77079,0.262161 -0.308,0.144197 -0.74594,0.297173 -0.9732,0.339962 -0.60766,0.114411 -3.70973,0.929293 -3.77285,0.991086 -0.0298,0.02911 0.0244,0.147402 0.12022,0.262856 0.14397,0.173412 0.13534,0.20993 -0.0493,0.20993 -0.13324,0 -0.22347,-0.113679 -0.22347,-0.281708 0,-0.294963 -0.0405,-0.296295 -1.3961,-0.04584 -0.22423,0.04143 -0.54028,-0.04092 -0.8264,-0.215368 -0.55147,-0.336209 -1.48829,-0.371274 -2.29693,-0.08597 -0.36093,0.127342 -0.57652,0.147303 -0.60691,0.05616 -0.0259,-0.07773 -0.2156,-0.151111 -0.42155,-0.163077 -0.20593,-0.01187 -0.37448,-0.0724 -0.37453,-0.134323 -4e-5,-0.06191 -0.12558,-0.07275 -0.27902,-0.02406 -0.17833,0.05659 -0.26526,0.03063 -0.24104,-0.07195 0.0525,-0.222291 -3.05546,-1.533421 -3.38612,-1.428476 -0.18813,0.05972 -0.23023,0.03384 -0.15161,-0.09325 0.0773,-0.125066 0.0425,-0.150476 -0.12055,-0.08795 -0.12607,0.04837 -0.22919,0.02571 -0.22919,-0.05035 0,-0.07606 -0.27891,-0.257859 -0.6198,-0.403982 -0.72076,-0.308952 -0.74174,-0.423558 -0.41618,-2.272595 0.18991,-1.07855 0.21116,-1.118064 1.00375,-1.867399 2.30888,-2.182863 13.10377,-8.681496 19.79693,-11.917948 3.48146,-1.683447 3.93538,-1.801703 5.23385,-1.363526 3.25796,1.099411 15.29237,7.84331 20.70284,11.601546 2.27608,1.581017 2.84862,2.159953 3.04897,3.083015 0.46913,2.161344 0.6058,5.088935 0.6164,13.204619 0.01,7.423435 -0.0755,10.210507 -0.3111,10.180648 -0.0503,-0.0063 -1.44581,-0.588992 -3.10101,-1.294692 z m -6.17733,-13.596425 c 0.19168,-0.19169 0.22265,-0.661119 0.0436,-0.661119 -0.0669,0 -0.15991,0.108472 -0.20668,0.241031 -0.0467,0.132565 -0.1212,0.318509 -0.16528,0.4132 -0.10216,0.219241 0.11143,0.223723 0.32836,0.0069 z m 1.18194,-4.869075 c 0.0451,-0.117534 -0.0952,-0.566887 -0.31157,-0.998564 -0.21646,-0.431679 -0.43633,-1.134972 -0.48863,-1.56288 -0.0615,-0.503465 -0.18939,-0.863369 -0.36237,-1.019909 -0.2586,-0.234044 -0.26729,-0.229197 -0.26729,0.149174 0,0.489282 0.40524,1.996045 0.6069,2.25651 0.11111,0.143448 0.10541,0.209768 -0.0213,0.252431 -0.1565,0.05266 -0.143,0.366224 0.0413,0.964767 0.0758,0.245859 0.70509,0.213306 0.80289,-0.04153 z m -1.49771,-4.607387 c 0.001,-0.705669 -0.0277,-0.748669 -0.40295,-0.604635 -0.24875,0.09546 -0.27831,0.428156 -0.0836,0.940428 0.22976,0.604287 0.48537,0.427855 0.4865,-0.335793 z m -3.39305,22.141016 c 0.21325,-0.271907 0.77728,-0.322635 0.92525,-0.08321 0.069,0.111694 -0.013,0.130092 -0.28052,0.06294 -0.23513,-0.05902 -0.46418,-0.02755 -0.6059,0.08321 -0.20364,0.159164 -0.20777,0.152478 -0.0389,-0.06294 z m 3.59862,0.03444 c -0.15048,-0.09725 -0.0382,-0.134663 0.4132,-0.137738 0.90361,-0.0062 1.03088,-0.124561 0.77981,-0.725462 -0.31052,-0.743199 -0.7115,-1.084767 -1.16067,-0.9887 l -0.37666,0.08056 0.32516,-0.285065 c 0.17883,-0.156788 0.49906,-0.285063 0.71161,-0.285063 0.21256,0 0.42016,-0.07748 0.46134,-0.172168 0.0412,-0.0947 0.0413,-0.0085 2.7e-4,0.191576 -0.0908,0.442579 0.11615,0.598539 0.51247,0.386418 0.16219,-0.08681 0.25716,-0.09671 0.21097,-0.02198 -0.0462,0.07473 0.008,0.212459 0.1212,0.306074 0.87509,0.726229 -1.01441,2.287577 -1.99862,1.651536 z m 2.167,-0.15482 c 0.0934,-0.09412 0.20457,-0.136452 0.24698,-0.09405 0.0425,0.04241 -0.034,0.119421 -0.16987,0.171145 -0.1963,0.07475 -0.21211,0.05893 -0.0771,-0.07711 z m -3.18526,-0.200773 c -0.13811,-0.359972 -0.0973,-1.184143 0.0542,-1.090599 0.0758,0.04681 0.13779,0.24049 0.13779,0.430383 0,0.189893 0.0641,0.465143 0.1425,0.61167 0.10997,0.205589 0.0976,0.266411 -0.0542,0.266411 -0.10818,0 -0.23432,-0.09805 -0.2803,-0.217865 z m -0.24715,-1.391285 c 0.0994,-0.03979 0.21821,-0.03489 0.26399,0.01089 0.0457,0.04577 -0.0356,0.07831 -0.18078,0.07235 -0.1604,-0.0067 -0.19309,-0.03924 -0.0833,-0.08321 z m -6.10232,-2.245795 c -0.0483,-0.07807 0.006,-0.101169 0.12965,-0.05414 0.2386,0.09157 0.28226,0.190286 0.0841,0.190286 -0.0712,0 -0.16746,-0.06126 -0.21374,-0.13616 z m 0.0678,-0.277044 c -0.12413,-0.08022 -0.14104,-0.134355 -0.0426,-0.135624 0.0903,-0.001 0.20234,0.05987 0.24915,0.135624 0.10574,0.170999 0.0581,0.170999 -0.2066,0 z m -1.3429,-0.205342 c -0.24619,-0.107009 -0.44764,-0.229374 -0.44764,-0.271923 0,-0.07668 0.95942,0.288912 1.08332,0.412802 0.12217,0.122187 -0.18918,0.05318 -0.63568,-0.140879 z m -0.28189,-0.456515 c -0.6285,-0.277527 -1.08506,-0.523818 -1.01457,-0.547316 0.0704,-0.02351 0.64671,0.2044 1.28046,0.506437 1.44391,0.688136 1.26293,0.715958 -0.26589,0.04089 z m -4.71094,-1.67961 c -0.12413,-0.08022 -0.14104,-0.134355 -0.0426,-0.135623 0.0903,-10e-4 0.20233,0.05987 0.24915,0.135623 0.10574,0.171 0.0581,0.171 -0.2066,0 z m -0.8264,-0.344332 c -0.18937,-0.108263 -0.28234,-0.196838 -0.2066,-0.196838 0.0758,0 0.29269,0.08858 0.48208,0.196838 0.18937,0.108261 0.28234,0.196838 0.20659,0.196838 -0.0758,0 -0.29268,-0.08858 -0.48207,-0.196838 z m -0.8264,-0.344332 c -0.11371,-0.07343 -0.14462,-0.133509 -0.0688,-0.133509 0.0758,0 0.23071,0.06008 0.34434,0.133509 0.11371,0.07343 0.14462,0.133509 0.0688,0.133509 -0.0758,0 -0.23071,-0.06008 -0.34434,-0.133509 z m -1.51506,-0.964132 c -0.11371,-0.07343 -0.14462,-0.133509 -0.0688,-0.133509 0.0758,0 0.23069,0.06008 0.34432,0.133509 0.11371,0.07343 0.14462,0.133509 0.0688,0.133509 -0.0758,0 -0.23071,-0.06008 -0.34434,-0.133509 z m -0.68866,-0.275466 c -0.11371,-0.07343 -0.14462,-0.133508 -0.0688,-0.133508 0.0758,0 0.23071,0.06008 0.34434,0.133508 0.11371,0.07343 0.14462,0.133509 0.0688,0.133509 -0.0758,0 -0.23069,-0.06008 -0.34432,-0.133509 z m -0.96414,-0.413199 c -0.11354,-0.07343 -0.14462,-0.133509 -0.0688,-0.133509 0.0758,0 0.2307,0.06008 0.34432,0.133509 0.11372,0.07343 0.14463,0.13351 0.0688,0.13351 -0.0758,0 -0.2307,-0.06008 -0.34433,-0.13351 z m -4.37303,-1.444939 c -0.24619,-0.107009 -0.44762,-0.229374 -0.44762,-0.271926 0,-0.07668 0.95942,0.288914 1.08332,0.412803 0.12217,0.122204 -0.1892,0.0532 -0.6357,-0.140877 z m -1.27402,-0.621057 c -0.15015,-0.09702 -0.15731,-0.134094 -0.0264,-0.135624 0.0991,-10e-4 0.14202,-0.06409 0.0952,-0.139837 -0.11973,-0.193817 0.0781,-0.16308 0.48206,0.07486 l 0.34434,0.202837 -0.4132,-0.08112 c -0.31556,-0.06195 -0.36438,-0.04644 -0.2066,0.06565 0.25812,0.183364 0.006,0.195466 -0.27546,0.01318 z m -0.68867,-0.275467 c -0.11371,-0.07343 -0.14462,-0.13351 -0.0688,-0.13351 0.0758,0 0.23071,0.06008 0.34434,0.13351 0.11371,0.07343 0.14462,0.133508 0.0688,0.133508 -0.0758,0 -0.23071,-0.06008 -0.34434,-0.133508 z m -1.03202,-0.411622 c -0.0483,-0.07807 0.007,-0.101169 0.12965,-0.05414 0.23861,0.09157 0.28228,0.190286 0.0841,0.190286 -0.0712,0 -0.16748,-0.06126 -0.21376,-0.13616 z m -7.438,-1.793883 c 0.10412,-0.32807 -0.12998,-0.46239 -0.47978,-0.275213 -0.22121,0.11838 -0.27831,0.10696 -0.27831,-0.05565 0,-0.112524 -0.097,-0.258814 -0.21527,-0.325075 -0.4948,-0.2769 0.29289,-1.421966 1.12115,-1.629849 0.18354,-0.04607 0.50416,-0.03177 0.71248,0.03175 0.33023,0.100713 0.28613,0.121194 -0.34434,0.159863 -0.64963,0.03984 -0.7231,0.07649 -0.7231,0.360812 0,0.174059 0.19089,0.57997 0.42418,0.902025 0.34135,0.471209 0.48927,0.573113 0.75754,0.521832 0.18334,-0.03503 0.33336,-0.01696 0.33336,0.04016 0,0.123846 -0.3167,0.263218 -0.93474,0.411342 -0.39918,0.09567 -0.44328,0.07888 -0.37317,-0.142017 z m 2.24622,-0.505511 c 0.0994,-0.03979 0.21821,-0.03489 0.26399,0.0109 0.0457,0.04576 -0.0356,0.07831 -0.18079,0.07235 -0.1604,-0.0067 -0.19308,-0.03926 -0.0833,-0.08321 z m -0.30011,-0.523989 c 0.0433,-0.112685 0.013,-0.39159 -0.066,-0.619798 -0.17945,-0.514773 0.0633,-0.572831 0.25763,-0.06162 0.19398,0.5102 0.16515,0.8863 -0.068,0.8863 -0.12249,0 -0.17125,-0.08085 -0.12363,-0.204878 z m 2.60738,-1.075093 c 0.0517,-0.135836 0.12868,-0.212277 0.17114,-0.16987 0.0425,0.0424 1e-4,0.153534 -0.094,0.246972 -0.136,0.135021 -0.15178,0.119194 -0.0771,-0.07711 z m 3.22645,-0.927551 c -0.15974,-0.101006 -0.12737,-0.130191 0.14609,-0.131833 0.19318,-0.001 0.43161,-0.07958 0.52987,-0.174276 0.14429,-0.139122 0.16948,-0.121894 0.13079,0.08972 -0.0537,0.294488 -0.49572,0.413038 -0.80675,0.216393 z m 2.21602,-0.489751 c 0.007,-0.160447 0.0392,-0.193087 0.0833,-0.08321 0.0399,0.09943 0.035,0.218222 -0.0114,0.263988 -0.0457,0.04577 -0.0782,-0.03558 -0.0724,-0.180774 z M 82.049354,36.9801 c -0.25685,-0.432408 -0.81519,-1.127084 -1.24077,-1.543727 -0.94383,-0.924007 -1.44058,-1.572638 -1.72416,-2.251308 l -0.21509,-0.514815 0.41744,0.215867 c 0.22959,0.118722 0.41743,0.307246 0.41743,0.418931 0,0.261947 0.12542,0.256959 0.42812,-0.01703 0.13372,-0.121049 0.30908,-0.179373 0.38961,-0.129605 0.2485,0.153583 0.16269,0.340359 -0.19793,0.430871 -0.18937,0.04754 -0.34432,0.126595 -0.34432,0.175705 0,0.04912 0.36438,0.478197 0.80972,0.953532 0.72582,0.77469 1.95349,2.821197 1.79031,2.98439 -0.0348,0.03486 -0.27353,-0.290408 -0.53036,-0.722813 z m -10.94334,-1.835584 c 0.0755,-0.122073 1.38723,-0.436533 1.56502,-0.375165 0.0753,0.02598 -0.25911,0.142082 -0.74304,0.258025 -0.48392,0.115939 -0.85381,0.168655 -0.82198,0.117143 z m 3.25193,-0.740558 c -0.0864,-0.189705 -0.10379,-0.344914 -0.0384,-0.344914 0.11436,0 0.32042,0.564994 0.23663,0.648798 -0.0226,0.02256 -0.11176,-0.114182 -0.19819,-0.303884 z m 0.76396,-0.105285 c -0.0892,-0.58567 -0.0298,-0.629795 0.15064,-0.111971 0.08,0.229453 0.0942,0.448913 0.0314,0.487691 -0.0628,0.03878 -0.14462,-0.130304 -0.18205,-0.37572 z m 3.72755,-0.576486 c -0.29289,-0.257873 -0.33491,-0.359522 -0.19621,-0.474629 0.13405,-0.111239 0.23143,-0.03126 0.4049,0.332507 0.12559,0.263438 0.21393,0.477021 0.19621,0.474627 -0.0177,-0.0025 -0.19993,-0.152022 -0.4049,-0.332505 z m -1.34897,0.0094 c 0,-0.0286 0.10851,-0.137071 0.24102,-0.241031 0.21846,-0.171324 0.22333,-0.166452 0.0521,0.05201 -0.17993,0.229428 -0.29303,0.302391 -0.29303,0.189029 z m -0.6198,-1.325326 c -0.0469,-0.07576 -0.0195,-0.137739 0.0607,-0.137739 0.0802,0 0.14592,0.06198 0.14592,0.137739 0,0.07576 -0.0273,0.137739 -0.0607,0.137739 -0.0334,0 -0.0991,-0.06198 -0.14592,-0.137739 z"/><script id="mesh_polyfill-3" type="text/javascript">!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();</script></g><script id="mesh_polyfill" type="text/javascript">!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();</script></svg>